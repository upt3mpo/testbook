name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM UTC

jobs:
  playwright:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testbook
          POSTGRES_PASSWORD: testbook
          POSTGRES_DB: testbook_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: tests/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install E2E test dependencies
        working-directory: ./tests
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Start backend server
        working-directory: ./backend
        env:
          TESTING: true
          SECRET_KEY: test-secret-key-for-ci
          DATABASE_URL: postgresql://testbook:testbook@localhost:5432/testbook_test
        run: |
          python seed.py
          uvicorn main:app --host 0.0.0.0 --port 8000 &
          sleep 5

      - name: Wait for backend
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8000/api/health; do sleep 1; done'

      - name: Run Playwright tests
        working-directory: ./tests
        env:
          API_URL: http://localhost:8000
        run: npx playwright test

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: tests/playwright-report/
          retention-days: 30

      - name: Upload test videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-videos
          path: tests/test-results/
          retention-days: 7

  selenium-python:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testbook
          POSTGRES_PASSWORD: testbook
          POSTGRES_DB: testbook_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Selenium dependencies
        working-directory: ./tests/e2e-python
        run: |
          pip install -r requirements.txt
          playwright install --with-deps chromium

      - name: Start backend server
        working-directory: ./backend
        env:
          TESTING: true
          SECRET_KEY: test-secret-key-for-ci
          DATABASE_URL: postgresql://testbook:testbook@localhost:5432/testbook_test
        run: |
          python seed.py
          uvicorn main:app --host 0.0.0.0 --port 8000 &
          sleep 5

      - name: Start frontend server
        working-directory: ./frontend
        run: |
          npm run dev &
          sleep 10

      - name: Wait for frontend
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:3000; do sleep 1; done'

      - name: Run Selenium tests
        working-directory: ./tests/e2e-python
        env:
          API_URL: http://localhost:8000
          FRONTEND_URL: http://localhost:3000
          BACKEND_URL: http://localhost:8000
          HEADLESS: true
        run: pytest -v

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: selenium-screenshots
          path: tests/e2e-python/screenshots/
          retention-days: 7
