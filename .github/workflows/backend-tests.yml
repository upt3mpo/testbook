name: Backend Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testbook
          POSTGRES_PASSWORD: testbook
          POSTGRES_DB: testbook_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting
        working-directory: ./backend
        run: |
          pip install ruff
          ruff check . || true

      - name: Run unit tests
        working-directory: ./backend
        env:
          TESTING: true
          SECRET_KEY: test-secret-key-for-ci
          DATABASE_URL: postgresql://testbook:testbook@localhost:5432/testbook_test
        run: |
          pytest tests/unit/ -v --tb=short

      - name: Run API tests
        working-directory: ./backend
        env:
          TESTING: true
          SECRET_KEY: test-secret-key-for-ci
          DATABASE_URL: postgresql://testbook:testbook@localhost:5432/testbook_test
        run: |
          pytest tests/integration/ -v --tb=short

      # Contract tests are intentionally skipped - planned for future update
      # See: backend/tests/integration/test_api_contract.py for details
      # - name: Run contract tests
      #   working-directory: ./backend
      #   env:
      #     TESTING: true
      #     SECRET_KEY: test-secret-key-for-ci
      #   run: |
      #     pytest tests/integration/test_api_contract.py -v --tb=short

      - name: Generate coverage report
        working-directory: ./backend
        env:
          TESTING: true
          SECRET_KEY: test-secret-key-for-ci
        run: |
          pytest --cov=. --cov-report=xml --cov-report=html --cov-report=term

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-py${{ matrix.python-version }}
          path: backend/htmlcov/
          retention-days: 30

      - name: Upload coverage to Codecov (optional)
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/coverage.xml
          flags: backend
          name: backend-coverage
