name: Performance Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 4 * * 0'  # Run weekly on Sundays at 4 AM UTC

jobs:
  k6-load-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testbook
          POSTGRES_PASSWORD: testbook
          POSTGRES_DB: testbook_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup k6
        uses: grafana/setup-k6-action@v1

      - name: Start backend server
        working-directory: ./backend
        env:
          TESTING: true
          SECRET_KEY: test-secret-key-for-ci
          DATABASE_URL: postgresql+psycopg://testbook:testbook@localhost:5432/testbook_test
        run: |
          python seed.py
          uvicorn main:app --host 0.0.0.0 --port 8000 &
          sleep 5

      - name: Wait for backend
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8000/api/health; do sleep 1; done'

      - name: Run k6 smoke test
        working-directory: ./tests/performance
        env:
          CI: true
        run: |
          k6 run --out json=smoke-test-results.json smoke-test.js

      - name: Run k6 load test
        working-directory: ./tests/performance
        env:
          CI: true
        run: |
          k6 run --out json=load-test-results.json load-test.js

      - name: Run k6 stress test
        working-directory: ./tests/performance
        env:
          CI: true
        continue-on-error: true
        run: |
          k6 run --out json=stress-test-results.json stress-test.js

      - name: Generate performance report
        working-directory: ./tests/performance
        run: |
          echo "# Performance Test Results" > performance-report.md
          echo "" >> performance-report.md
          echo "## Test Run: $(date)" >> performance-report.md
          echo "" >> performance-report.md
          echo "### Smoke Test" >> performance-report.md
          cat smoke-test-results.json | tail -20 >> performance-report.md
          echo "" >> performance-report.md
          echo "### Load Test" >> performance-report.md
          cat load-test-results.json | tail -20 >> performance-report.md
          echo "" >> performance-report.md
          echo "### Stress Test" >> performance-report.md
          cat stress-test-results.json | tail -20 >> performance-report.md || true

      - name: Upload k6 results
        uses: actions/upload-artifact@v4
        with:
          name: k6-performance-results
          path: |
            tests/performance/*-results.json
            tests/performance/performance-report.md
          retention-days: 90

      - name: Comment performance results on PR
        if: github.event_name == 'pull_request'
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('tests/performance/performance-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
