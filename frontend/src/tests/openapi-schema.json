{
  "openapi": "3.1.0",
  "info": {
    "title": "Testbook API",
    "description": "A social media API for testing purposes",
    "version": "1.0.0"
  },
  "paths": {
    "/api": {
      "get": {
        "summary": "Root",
        "operationId": "root_api_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint with rate limiting headers",
        "operationId": "health_check_api_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register",
        "description": "Register a new user and return access token (rate limited: 15/min prod, 100/min test)",
        "operationId": "register_api_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "description": "Login with email and password (rate limited: 20/min prod, 100/min test)",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Current User Info",
        "description": "Get current authenticated user info",
        "operationId": "get_current_user_info_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/{username}/followers": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Followers",
        "description": "Get list of users who follow this user",
        "operationId": "get_followers_api_users__username__followers_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserListItem"
                  },
                  "title": "Response Get Followers Api Users  Username  Followers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{username}/following": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Following",
        "description": "Get list of users this user is following",
        "operationId": "get_following_api_users__username__following_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserListItem"
                  },
                  "title": "Response Get Following Api Users  Username  Following Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Profile",
        "description": "Get user profile by username",
        "operationId": "get_user_profile_api_users__username__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me/upload-avatar": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Upload Avatar",
        "description": "Upload a profile picture",
        "operationId": "upload_avatar_api_users_me_upload_avatar_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_avatar_api_users_me_upload_avatar_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/me": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update Current User",
        "description": "Update current user's profile",
        "operationId": "update_current_user_api_users_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete Current User",
        "description": "Delete current user's account",
        "operationId": "delete_current_user_api_users_me_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/{username}/follow": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Follow User",
        "description": "Follow a user",
        "operationId": "follow_user_api_users__username__follow_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Unfollow User",
        "description": "Unfollow a user",
        "operationId": "unfollow_user_api_users__username__follow_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{username}/block": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Block User",
        "description": "Block a user",
        "operationId": "block_user_api_users__username__block_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Unblock User",
        "description": "Unblock a user",
        "operationId": "unblock_user_api_users__username__block_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{username}/posts": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Posts",
        "description": "Get posts by a specific user",
        "operationId": "get_user_posts_api_users__username__posts_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostResponse"
                  },
                  "title": "Response Get User Posts Api Users  Username  Posts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/upload": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Upload Media",
        "description": "Upload an image or video file",
        "operationId": "upload_media_api_posts_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_media_api_posts_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/posts/": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Create Post",
        "description": "Create a new post",
        "operationId": "create_post_api_posts__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/posts/{post_id}": {
      "put": {
        "tags": [
          "Posts"
        ],
        "summary": "Update Post",
        "description": "Update a post",
        "operationId": "update_post_api_posts__post_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Post Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete Post",
        "description": "Delete a post",
        "operationId": "delete_post_api_posts__post_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get Post",
        "description": "Get a single post with all details",
        "operationId": "get_post_api_posts__post_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/repost/{post_id}": {
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete Repost",
        "description": "Remove a repost of a post",
        "operationId": "delete_repost_api_posts_repost__post_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/repost": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Create Repost",
        "description": "Create a repost of an existing post",
        "operationId": "create_repost_api_posts_repost_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepostCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/posts/{post_id}/comments": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Create Comment",
        "description": "Add a comment to a post",
        "operationId": "create_comment_api_posts__post_id__comments_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Post Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/{post_id}/reactions": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Add Reaction",
        "description": "Add or update reaction to a post",
        "operationId": "add_reaction_api_posts__post_id__reactions_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Post Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReactionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Remove Reaction",
        "description": "Remove reaction from a post",
        "operationId": "remove_reaction_api_posts__post_id__reactions_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/feed/all": {
      "get": {
        "tags": [
          "Feed"
        ],
        "summary": "Get All Feed",
        "description": "Get all posts from all users (excluding blocked users)",
        "operationId": "get_all_feed_api_feed_all_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostResponse"
                  },
                  "title": "Response Get All Feed Api Feed All Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/feed/following": {
      "get": {
        "tags": [
          "Feed"
        ],
        "summary": "Get Following Feed",
        "description": "Get posts from users you follow",
        "operationId": "get_following_feed_api_feed_following_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostResponse"
                  },
                  "title": "Response Get Following Feed Api Feed Following Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dev/reset": {
      "post": {
        "tags": [
          "Development"
        ],
        "summary": "Reset Database",
        "description": "Reset database to initial state (drop all tables and recreate)\n\n⚠️ REQUIRES TEST MODE: Set TESTING=true in environment to use this endpoint.\nThis prevents accidental database deletion in non-test environments.",
        "operationId": "reset_database_api_dev_reset_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/dev/seed": {
      "post": {
        "tags": [
          "Development"
        ],
        "summary": "Reseed Database",
        "description": "Reseed database with fresh data (keeps existing data)\n\n⚠️ REQUIRES TEST MODE: Set TESTING=true in environment to use this endpoint.",
        "operationId": "reseed_database_api_dev_seed_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/dev/users": {
      "get": {
        "tags": [
          "Development"
        ],
        "summary": "Get All Users With Passwords",
        "description": "Get all users with their plain text passwords (for testing only)\n\n⚠️ REQUIRES TEST MODE: Set TESTING=true in environment to use this endpoint.\n⚠️ SECURITY WARNING: This endpoint exposes plaintext passwords and should ONLY\nbe used in test environments for test data verification.",
        "operationId": "get_all_users_with_passwords_api_dev_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/dev/create-post": {
      "post": {
        "tags": [
          "Development"
        ],
        "summary": "Create Test Post",
        "description": "Quickly create a post for a specific user (for testing)\n\n⚠️ REQUIRES TEST MODE: Set TESTING=true in environment to use this endpoint.",
        "operationId": "create_test_post_api_dev_create_post_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Content"
            }
          },
          {
            "name": "image_url",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Image Url"
            }
          },
          {
            "name": "video_url",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Video Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_upload_avatar_api_users_me_upload_avatar_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_avatar_api_users_me_upload_avatar_post"
      },
      "Body_upload_media_api_posts_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_media_api_posts_upload_post"
      },
      "CommentCreate": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "CommentCreate"
      },
      "CommentResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "author_id": {
            "type": "integer",
            "title": "Author Id"
          },
          "author_username": {
            "type": "string",
            "title": "Author Username"
          },
          "author_display_name": {
            "type": "string",
            "title": "Author Display Name"
          },
          "author_profile_picture": {
            "type": "string",
            "title": "Author Profile Picture"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "content",
          "author_id",
          "author_username",
          "author_display_name",
          "author_profile_picture",
          "created_at"
        ],
        "title": "CommentResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequest"
      },
      "PostCreate": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "PostCreate"
      },
      "PostDetailResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "is_repost": {
            "type": "boolean",
            "title": "Is Repost",
            "default": false
          },
          "original_post_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Post Id"
          },
          "original_post": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PostResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "author_id": {
            "type": "integer",
            "title": "Author Id"
          },
          "author_username": {
            "type": "string",
            "title": "Author Username"
          },
          "author_display_name": {
            "type": "string",
            "title": "Author Display Name"
          },
          "author_profile_picture": {
            "type": "string",
            "title": "Author Profile Picture"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "comments_count": {
            "type": "integer",
            "title": "Comments Count",
            "default": 0
          },
          "reactions_count": {
            "type": "integer",
            "title": "Reactions Count",
            "default": 0
          },
          "reposts_count": {
            "type": "integer",
            "title": "Reposts Count",
            "default": 0
          },
          "user_reaction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Reaction"
          },
          "has_reposted": {
            "type": "boolean",
            "title": "Has Reposted",
            "default": false
          },
          "comments": {
            "items": {
              "$ref": "#/components/schemas/CommentResponse"
            },
            "type": "array",
            "title": "Comments",
            "default": []
          },
          "reactions": {
            "items": {
              "$ref": "#/components/schemas/ReactionResponse"
            },
            "type": "array",
            "title": "Reactions",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "content",
          "author_id",
          "author_username",
          "author_display_name",
          "author_profile_picture",
          "created_at"
        ],
        "title": "PostDetailResponse"
      },
      "PostResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "is_repost": {
            "type": "boolean",
            "title": "Is Repost",
            "default": false
          },
          "original_post_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Post Id"
          },
          "original_post": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PostResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "author_id": {
            "type": "integer",
            "title": "Author Id"
          },
          "author_username": {
            "type": "string",
            "title": "Author Username"
          },
          "author_display_name": {
            "type": "string",
            "title": "Author Display Name"
          },
          "author_profile_picture": {
            "type": "string",
            "title": "Author Profile Picture"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "comments_count": {
            "type": "integer",
            "title": "Comments Count",
            "default": 0
          },
          "reactions_count": {
            "type": "integer",
            "title": "Reactions Count",
            "default": 0
          },
          "reposts_count": {
            "type": "integer",
            "title": "Reposts Count",
            "default": 0
          },
          "user_reaction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Reaction"
          },
          "has_reposted": {
            "type": "boolean",
            "title": "Has Reposted",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "content",
          "author_id",
          "author_username",
          "author_display_name",
          "author_profile_picture",
          "created_at"
        ],
        "title": "PostResponse"
      },
      "ReactionCreate": {
        "properties": {
          "reaction_type": {
            "type": "string",
            "title": "Reaction Type"
          }
        },
        "type": "object",
        "required": [
          "reaction_type"
        ],
        "title": "ReactionCreate"
      },
      "ReactionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "reaction_type": {
            "type": "string",
            "title": "Reaction Type"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "reaction_type",
          "user_id",
          "username",
          "display_name",
          "created_at"
        ],
        "title": "ReactionResponse"
      },
      "RepostCreate": {
        "properties": {
          "original_post_id": {
            "type": "integer",
            "title": "Original Post Id"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "original_post_id"
        ],
        "title": "RepostCreate"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "default": ""
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "display_name",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserListItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "bio": {
            "type": "string",
            "title": "Bio"
          },
          "profile_picture": {
            "type": "string",
            "title": "Profile Picture"
          },
          "is_following": {
            "type": "boolean",
            "title": "Is Following",
            "default": false
          },
          "is_blocked": {
            "type": "boolean",
            "title": "Is Blocked",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "display_name",
          "bio",
          "profile_picture"
        ],
        "title": "UserListItem"
      },
      "UserProfileResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "bio": {
            "type": "string",
            "title": "Bio"
          },
          "profile_picture": {
            "type": "string",
            "title": "Profile Picture"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "followers_count": {
            "type": "integer",
            "title": "Followers Count",
            "default": 0
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count",
            "default": 0
          },
          "posts_count": {
            "type": "integer",
            "title": "Posts Count",
            "default": 0
          },
          "is_following": {
            "type": "boolean",
            "title": "Is Following",
            "default": false
          },
          "is_blocked": {
            "type": "boolean",
            "title": "Is Blocked",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "display_name",
          "bio",
          "profile_picture",
          "created_at"
        ],
        "title": "UserProfileResponse"
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "bio": {
            "type": "string",
            "title": "Bio"
          },
          "profile_picture": {
            "type": "string",
            "title": "Profile Picture"
          },
          "theme": {
            "type": "string",
            "title": "Theme"
          },
          "text_density": {
            "type": "string",
            "title": "Text Density"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "followers_count": {
            "type": "integer",
            "title": "Followers Count",
            "default": 0
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count",
            "default": 0
          },
          "is_following": {
            "type": "boolean",
            "title": "Is Following",
            "default": false
          },
          "is_blocked": {
            "type": "boolean",
            "title": "Is Blocked",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "username",
          "display_name",
          "bio",
          "profile_picture",
          "theme",
          "text_density",
          "created_at"
        ],
        "title": "UserResponse"
      },
      "UserUpdate": {
        "properties": {
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "profile_picture": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture"
          },
          "theme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme"
          },
          "text_density": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Density"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
